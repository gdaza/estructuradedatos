#pragma once

#include <iostream>

using namespace std;

class Pila

{

private:

	int pila[100];

	int cima;

public:

	Pila()

	{

		cima = -1;

	}

	bool Pila::apilar(int x)

{

	if(cima==99)

	{

		return false;

	}else{

		cima++;

		pila[cima]=x;

		return true;

	}

}

	bool desapilar(int x)

	{

		if(cima == -1)

		{

			return false;

		}else{

			cima --;

			return true;

		}

	}

	bool pilaLlena();

	bool pilaVacia();

	bool mostrar()

	{

		for(int i=0; i<=cima; i++)

         cout << pila[cima-i] << endl;

		return true;

	}

};



#include "stdafx.h"

#include <iostream>

#include "Pila.h"

using namespace std;



void main()

{

	int n;

	cout<<"ingrese el tamaÃ±o de la pila: ";

	cin>>n;

	Pila p1;

	for(int a=0;a<n;a++)

	{

		int x;

		cin >>x;

		p1.apilar(x);

	}

	cout<<p1.mostrar();

	system("pause");

}

